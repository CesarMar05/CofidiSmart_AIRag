// <auto-generated />
using System;
using AT2Soft.RAGEngine.Infrastructure.SQLServer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AT2Soft.RAGEngine.Infrastructure.SQLServer.Migrations
{
    [DbContext(typeof(RAGSqlServerDbContext))]
    [Migration("20250830004554_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AT2Soft.RAGEngine.Domain.Entities.ApplicationClient", b =>
                {
                    b.Property<Guid>("ApplicationClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AllowedScopes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientSecretHash")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("ApplicationClientId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ApplicationClients", (string)null);
                });

            modelBuilder.Entity("AT2Soft.RAGEngine.Domain.Entities.Chunk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("KDId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KDId", "Position")
                        .IsUnique();

                    b.ToTable("Chunks", (string)null);
                });

            modelBuilder.Entity("AT2Soft.RAGEngine.Domain.Entities.KnowledgeDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CollectionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Digest")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("nvarchar(24)");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReceivedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Tags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationClientId");

                    b.ToTable("KnowledgeDocuments", (string)null);
                });

            modelBuilder.Entity("AT2Soft.RAGEngine.Domain.Entities.Chunk", b =>
                {
                    b.HasOne("AT2Soft.RAGEngine.Domain.Entities.KnowledgeDocument", "KnowledgeDocument")
                        .WithMany("Chunks")
                        .HasForeignKey("KDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KnowledgeDocument");
                });

            modelBuilder.Entity("AT2Soft.RAGEngine.Domain.Entities.KnowledgeDocument", b =>
                {
                    b.HasOne("AT2Soft.RAGEngine.Domain.Entities.ApplicationClient", "ApplicationClient")
                        .WithMany("KnowledgeDocuments")
                        .HasForeignKey("ApplicationClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationClient");
                });

            modelBuilder.Entity("AT2Soft.RAGEngine.Domain.Entities.ApplicationClient", b =>
                {
                    b.Navigation("KnowledgeDocuments");
                });

            modelBuilder.Entity("AT2Soft.RAGEngine.Domain.Entities.KnowledgeDocument", b =>
                {
                    b.Navigation("Chunks");
                });
#pragma warning restore 612, 618
        }
    }
}
